# Dataset published by FitzPatrick et al. 
# hhttps://www.sciencedirect.com/science/article/pii/S2211124720316508?via%3Dihub

# gene counts can be obtained from: https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE162687

library("Seurat")
library("tidyverse")

GSM4957163_filtered_gene_counts <- read.delim("GSM4957163_filtered_gene_counts.txt")
rownames(GSM4957163_filtered_gene_counts)<- GSM4957163_filtered_gene_counts$Gene.name
GSM4957163_filtered_gene_counts<-GSM4957163_filtered_gene_counts[,-1]

f.data <- CreateSeuratObject(counts = GSM4957163_filtered_gene_counts, project = "G02792", min.cells = 3, min.features = 200)
f.data
#An object of class Seurat 
#10951 features across 974 samples within 1 assay 
#Active assay: RNA (10951 features, 0 variable features)

#filtering based on mRNA content and the percentage of mitochondrial genes
mito.genes <- grep(pattern = "^MT-", x = rownames(f.data@assays[["RNA"]]), value = TRUE)
percent.mito <- Matrix::colSums(f.data@assays[["RNA"]][mito.genes, ])/Matrix::colSums(f.data@assays[["RNA"]])
f.data<- AddMetaData(object = f.data, metadata = percent.mito, col.name = "percent.mito")
f.data.mt <- subset(x = f.data, subset = nFeature_RNA > 200 & nFeature_RNA < 2600 & percent.mito >  -Inf & percent.mito < 0.1 )

f.data.mt <- NormalizeData(f.data.mt)
f.data.mt <- FindVariableFeatures(f.data.mt, selection.method = "vst", nfeatures = 2000)
f.data.mt <- ScaleData(f.data.mt)
f.data.mt <- RunPCA(f.data.mt, features = VariableFeatures(object = f.data.mt))
f.data.mt <- FindNeighbors(f.data.mt, dims = 1:10)
f.data.mt <- FindClusters(f.data.mt, resolution = 0.5)
f.data.mt <- RunUMAP(f.data.mt, reduction = "pca", dims = 1:20)
DimPlot(f.data.mt, reduction = "umap")
                 
#potential break-point: processed data can be saved and reloaded:
#saveRDS(f.data.mt, file = "fitzpatrick_data_allcells.rds")
#f.data.mt<-readRDS("fitzpatrick_data_allcells.rds", refhook = NULL)
                 
FeaturePlot(f.data.mt, features = c("CD3E", "CD4", "CD8B","CD8A"))
                 
#based on this analysis, CD4 T cells  are in clusters 0, 2,and 4
                 
#isolate CD4s from th dataset
CD4s.only <- subset(x = f.data.mt, idents = c('0','2', '4'))
                 
#Supplemental Figure 2, E-G
#adding gene modules of interest to the Seurat object.

geneModules<-read.csv("signatures.csv", header= FALSE)
geneModules<-geneModules[,-1]
geneModules<-column_to_rownames(geneModules, var ="V2")
                 
# list of TRM-associated genes from Beura et al., J Ex Med, 2019:
#https://rupress.org/jem/article/216/5/1214/121030/CD4-resident-memory-T-cells-dominate
Beura<-as.vector(geneModules[1,])

# list of TRM-associated genes from Milner et al., NATURE, 2017
#https://www.nature.com/articles/nature24993
Milner<-as.vector(geneModules[2,])
Milner<-Milner[1:118]

# list of genes significantly overexpressed in CD161hiCD56- and CD161hiCD56+ CD4 T cells compared to CD161- and CD161int cells (human TMIC gene module, this study)
TMIC<-as.vector(geneModules[3,])
TMIC<-TMIC[1:26]
                 
CD4s.only <- AddModuleScore(object = CD4s.only,features = list(Beura),name = 'Beura_2019')
CD4s.only <- AddModuleScore(object = CD4s.only,features = list(Milner),name = 'Milner_2017')
CD4s.only <- AddModuleScore(object = CD4s.only,features = list(TMIC), name = 'TMIC')
                 
#inital check of gene module co-expression
FeaturePlot(CD4s.only, features = c("TMIC1", "Milner_20171"),cols = c("lightgrey", "#ff0000", "#0033FF"), blend = TRUE, blend.threshold = 0.5 )
FeaturePlot(CD4s.only, features = c("TMIC1", "Beura_20191"),cols = c("lightgrey", "#ff0000", "#0033FF"), blend = TRUE, blend.threshold = 0.5 )

#this is computationally quite demanding --> save as rds file to start right here!
#saveRDS(CD4s.only , file = "fitzpatrick_CD4s.rds"
#CD4s.only<-readRDS("fitzpatrick_CD4s.rds", refhook = NULL)                 

#AUCell analysis of the expression of gene modules in the healthy CD4 T cells
library("data.table")
library("AUCell")
library("GSEABase")
                 
gene.counts<-GetAssayData(CD4s.only, assay = "RNA", slot = "counts")
gmtFile<-paste(file.path("signatures.gmt"), sep="/")
geneSets<-getGmt((gmtFile))   
                 
geneSets<-subsetGeneSets(geneSets, row.names(gene.counts))
cbind(nGenes(geneSets))

geneSets<-subsetGeneSets(geneSets, row.names(gene.counts))
cbind(nGenes(geneSets))
#Trm_Beura_2019   289
#Trm_Milner_2017  107
#TMIC_human        26
#KEY_markers        4
                
geneSets <- setGeneSetNames(geneSets, newNames=paste(names(geneSets), " (", nGenes(geneSets) ,"g)", sep=""))
extraGeneSets <- c(
  GeneSet(sample(rownames(gene.counts), 150), setName="Random (150g)"),
  GeneSet(sample(rownames(gene.counts), 500), setName="Random (500g)"))
countsPerGene <- apply(gene.counts, 1, function(x) sum(x>0))
extraGeneSets<-c(extraGeneSets,GeneSet(sample(names(countsPerGene)[which(countsPerGene>quantile(countsPerGene, probs=.95))], 100),setName = "HK-like(100g)"))
geneSets<-GeneSetCollection(c(geneSets, extraGeneSets))
names(geneSets)
            
#[1] "Trm_Beura_2019 (289g)"  "Trm_Milner_2017 (107g)" "TMIC_human (26g)"       "KEY_markers (4g)"       "Random (150g)"          "Random (500g)"         
#[7] "HK-like(100g)"
                 
ranks <- AUCell_buildRankings(gene.counts, nCores = 1, plotStats = TRUE)
cells <- AUCell_calcAUC(geneSets = geneSets, ranks, aucMaxRank = ceiling(0.05 * nrow(ranks)))
                 
par(mfrow=c(3,3))
AUC <- AUCell_exploreThresholds(cells, plotHist = TRUE, assign=TRUE)
                 
write.csv(cells@assays@data@listData,"Fitzpatrick_AUC_values.csv")
#the exported .csv-file contains the AUC values for the differen gen modules in the CD4 T cells.
#data were imported into Prism for a correlation analysis
